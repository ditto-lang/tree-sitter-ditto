================================================================================
unqualified
================================================================================
module Test exports (..);

x = let Foo1_bar234 = foo; in unit;
--------------------------------------------------------------------------------

(source_file
  header: (module_header
    module_name: (module_name)
    exports: (exposing_everything))
  declaration: (value_declaration
    name: (value_declaration_name)
    expression: (expression_let
      (expression_let_value_declaration
        binder: (pattern_constructor
          (pattern_constructor_proper_name))
        expression: (expression_variable
          (expression_variable_name)))
      (expression_unit))))

================================================================================
qualified
================================================================================
module Test exports (..);

x = let SomeModule.Foo1_bar234 = foo; in unit;
--------------------------------------------------------------------------------

(source_file
  header: (module_header
    module_name: (module_name)
    exports: (exposing_everything))
  declaration: (value_declaration
    name: (value_declaration_name)
    expression: (expression_let
      (expression_let_value_declaration
        binder: (pattern_constructor
          (qualifier)
          (pattern_constructor_proper_name))
        expression: (expression_variable
          (expression_variable_name)))
      (expression_unit))))

================================================================================
trailing underscore
================================================================================
module Test exports (..);

x = let Foo_ = foo; in unit;
--------------------------------------------------------------------------------

(source_file
  header: (module_header
    module_name: (module_name)
    exports: (exposing_everything))
  declaration: (value_declaration
    name: (value_declaration_name)
    expression: (expression_let
      (expression_let_value_declaration
        binder: (pattern_constructor
          (pattern_constructor_proper_name))
        expression: (expression_variable
          (expression_variable_name)))
      (expression_unit))))

================================================================================
with fields
================================================================================
module Test exports (..);

x = let Pair(x, y, z) = pair; in unit;
--------------------------------------------------------------------------------

(source_file
  header: (module_header
    module_name: (module_name)
    exports: (exposing_everything))
  declaration: (value_declaration
    name: (value_declaration_name)
    expression: (expression_let
      (expression_let_value_declaration
        binder: (pattern_constructor
          (pattern_constructor_proper_name)
          (pattern_constructor_fields
            field: (pattern_variable)
            field: (pattern_variable)
            field: (pattern_variable)))
        expression: (expression_variable
          (expression_variable_name)))
      (expression_unit))))
