================================================================================
single pattern
================================================================================
module Test exports (..);

five =
  match expr with
  | Pattern -> arm_expr
  end;
--------------------------------------------------------------------------------

(source_file
  header: (module_header
    module_name: (module_name)
    exports: (exposing_everything))
  declaration: (value_declaration
    name: (value_declaration_name)
    expression: (expression_match
      expression: (expression_variable
        (expression_variable_name))
      arm: (expression_match_arm
        match_arm_pattern: (pattern_constructor
          (pattern_constructor_proper_name))
        match_arm_expression: (expression_variable
          (expression_variable_name))))))

================================================================================
multiple patterns
================================================================================
module Test exports (..);

five =
  match expr with
  | Pattern0 -> arm_expr
  | Pattern1 -> arm_expr
  end;
--------------------------------------------------------------------------------

(source_file
  header: (module_header
    module_name: (module_name)
    exports: (exposing_everything))
  declaration: (value_declaration
    name: (value_declaration_name)
    expression: (expression_match
      expression: (expression_variable
        (expression_variable_name))
      arm: (expression_match_arm
        match_arm_pattern: (pattern_constructor
          (pattern_constructor_proper_name))
        match_arm_expression: (expression_variable
          (expression_variable_name)))
      arm: (expression_match_arm
        match_arm_pattern: (pattern_constructor
          (pattern_constructor_proper_name))
        match_arm_expression: (expression_variable
          (expression_variable_name))))))

================================================================================
pattern with fields
================================================================================
module Test exports (..);

five =
  match expr with
  | A(b) -> arm_expr
  | A(B, C(d)) -> arm_expr
  end;
--------------------------------------------------------------------------------

(source_file
  header: (module_header
    module_name: (module_name)
    exports: (exposing_everything))
  declaration: (value_declaration
    name: (value_declaration_name)
    expression: (expression_match
      expression: (expression_variable
        (expression_variable_name))
      arm: (expression_match_arm
        match_arm_pattern: (pattern_constructor
          (pattern_constructor_proper_name)
          (pattern_constructor_fields
            field: (pattern_variable)))
        match_arm_expression: (expression_variable
          (expression_variable_name)))
      arm: (expression_match_arm
        match_arm_pattern: (pattern_constructor
          (pattern_constructor_proper_name)
          (pattern_constructor_fields
            field: (pattern_constructor
              (pattern_constructor_proper_name))
            field: (pattern_constructor
              (pattern_constructor_proper_name)
              (pattern_constructor_fields
                field: (pattern_variable)))))
        match_arm_expression: (expression_variable
          (expression_variable_name))))))

================================================================================
nested
================================================================================
module Test exports (..);

five =
  match expr with
  | outer0 ->
      match expr with
      | inner0 -> x
      | inner1 -> y
      end
  end;
--------------------------------------------------------------------------------

(source_file
  header: (module_header
    module_name: (module_name)
    exports: (exposing_everything))
  declaration: (value_declaration
    name: (value_declaration_name)
    expression: (expression_match
      expression: (expression_variable
        (expression_variable_name))
      arm: (expression_match_arm
        match_arm_pattern: (pattern_variable)
        match_arm_expression: (expression_match
          expression: (expression_variable
            (expression_variable_name))
          arm: (expression_match_arm
            match_arm_pattern: (pattern_variable)
            match_arm_expression: (expression_variable
              (expression_variable_name)))
          arm: (expression_match_arm
            match_arm_pattern: (pattern_variable)
            match_arm_expression: (expression_variable
              (expression_variable_name))))))))
