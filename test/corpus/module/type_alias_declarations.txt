================================================================================
Ints
================================================================================
module Test exports (..);

type alias Ints = Array(Int);
--------------------------------------------------------------------------------

(source_file
  header: (module_header
    module_name: (module_name)
    exports: (exposing_everything))
  declaration: (type_alias_declaration
    name: (type_declaration_name)
    aliased_type: (type_call
      function: (type_constructor
        (type_constructor_proper_name))
      arguments: (type_call_arguments
        argument: (type_constructor
          (type_constructor_proper_name))))))

================================================================================
Option
================================================================================
module Test exports (..);

type alias Option(a) = Maybe(a);
--------------------------------------------------------------------------------

(source_file
  header: (module_header
    module_name: (module_name)
    exports: (exposing_everything))
  declaration: (type_alias_declaration
    name: (type_declaration_name)
    variables: (type_declaration_variables
      variable: (type_declaration_variable))
    aliased_type: (type_call
      function: (type_constructor
        (type_constructor_proper_name))
      arguments: (type_call_arguments
        argument: (type_variable)))))

================================================================================
Either
================================================================================
module Test exports (..);

type alias Either(a, b,) = Result(a, b);
--------------------------------------------------------------------------------

(source_file
  header: (module_header
    module_name: (module_name)
    exports: (exposing_everything))
  declaration: (type_alias_declaration
    name: (type_declaration_name)
    variables: (type_declaration_variables
      variable: (type_declaration_variable)
      variable: (type_declaration_variable))
    aliased_type: (type_call
      function: (type_constructor
        (type_constructor_proper_name))
      arguments: (type_call_arguments
        argument: (type_variable)
        argument: (type_variable)))))

================================================================================
Props
================================================================================
module Test exports (..);

type alias Props(r) = { r | foo: Int, bar: Bool, baz: Unit };
--------------------------------------------------------------------------------

(source_file
  header: (module_header
    module_name: (module_name)
    exports: (exposing_everything))
  declaration: (type_alias_declaration
    name: (type_declaration_name)
    variables: (type_declaration_variables
      variable: (type_declaration_variable))
    aliased_type: (type_open_record
      (type_open_record_row_variable)
      field: (type_record_field
        label: (type_record_field_label)
        value: (type_constructor
          (type_constructor_proper_name)))
      field: (type_record_field
        label: (type_record_field_label)
        value: (type_constructor
          (type_constructor_proper_name)))
      field: (type_record_field
        label: (type_record_field_label)
        value: (type_constructor
          (type_constructor_proper_name))))))
